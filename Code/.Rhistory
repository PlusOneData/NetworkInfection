install.packages('tidyverse')
install.packages('sf')
install.packages('sf')
install.packages('igraph')
install.packages('igraphdata')
1202+518+1737+771+763
head(iris)
install.packages('tigris')
zctas_dta <- tigris::zctas(T, year = 2019)
str(zctas_dta)
zctas_dta
library(sf)
zctas_dta
zctas_dta$ZCTA5CE10
zctas_dta@bbox
readr::write_rds(zctas_dta, 'Code/2020/zctas.rds')
tmp <- st_as_sf(zctas_dta)
tmp
tmp %>% dplyr::filter(ZCTA5CE10 == 19087)
tmp %>% dplyr::filter(ZCTA5CE10 == 19087) %>% plot
tmp %>% dplyr::filter(ZCTA5CE10 == 20002) %>% plot
st_write(tmp, 'Code/2020/zctas.gpkg')
setwd(dir = 'Code/LongtermProjects/Graph-COP/CommunityCoding/')
setwd('Code/')
library(igraph)
initG <- function(g, n){
V(g)$infected <- c(rep(T, n), rep(F, vcount(g)-n))
V(g)$color <- ifelse(V(g)$infected, 'red', 'blue')
g
}
n <- 1000
ed <- n * 4
prob.infect <- .3
set.seed(4321); rn <- sample_gnm(n, ed, directed = F) %>%
initG(1)
set.seed(4321); sfree <- sample_fitness_pl(n, ed, 2.2) %>%
initG(1)
set.seed(4321); sw <-  sample_smallworld(1, n, 4, .1) %>%
initG(1)
set.seed(4321); plot(sw, vertex.label = '', vertex.size = 3)
nextTurn <- function(g, prob.infect){
infect_adja <- g %>%
ego(nodes = V(.)[infected], mindist = 1) %>%
unlist() %>%
unique() %>%
{V(g)[.][!infected]} %>%
{
l <- length(.)
bool <- runif(l) <= prob.infect
.[bool]
}
V(g)[infect_adja]$infected <- T
V(g)[infect_adja]$color <- "red"
g
}
createTimeline <- function(g, t, prob.infect){
timedNetworks <- list(g)
for( x in 2:t){
timedNetworks[[x]] <- nextTurn(timedNetworks[[x-1]], prob.infect)
}
timedNetworks
}
set.seed(4321)
test1 <- createTimeline(sfree, 15, .3)
test0 <- createTimeline(rn, 15, .3)
test2 <- createTimeline(sw, 15, .3)
# Scale free has multiple components; reduce to just he largest
set.seed(4321); plot(test1[[10]], vertex.label = '', vertex.size = 5)
lrg_comp_1 <- test1[[1]] %>%
components() %>%
{
comp_id <- which.max(.$csize);
comp_v <- which(.$membership == comp_id)
comp_v
}
for(x in 1:length(test1)){
test1[[x]] <- test1[[x]] %>%
{. - V(.)[!V(.) %in% lrg_comp_1]}
}
set.seed(4321); plot(test1[[15]], vertex.label = '', vertex.size = 3)
animate_system <- function(g_list, main, filepath){
animation::saveGIF({
lapply(1:length(g_list), function(i){
set.seed(4321); plot(g_list[[i]],
main = main,
sub = paste('Turn:', i - 1),
vertex.label = '',
vertex.size = 3)
})
},
movie.name = filepath,
ani.width = 600,
ani.height = 600,
interval = 1
)
}
animate_system(test1,
paste0("Scale Free Network of size ~", n),
'../Images/20200527_ScaleFree_1000.gif')
dir()
setwd('..')
animate_system(test1,
paste0("Scale Free Network of size ~", n),
'Images/20200527_ScaleFree_1000.gif')
setwd(dir = 'Code/')
animate_system(test1,
paste0("Scale Free Network of size ~", n),
'20200527_ScaleFree_1000.gif')
animate_system(test0,
paste0("Random Network of size ~", n),
'20200527_Random_1000.gif')
animate_system(test2,
paste0("Small World Network of size ~", n),
'20200527_SmallWorld_1000.gif')
readr::write_rds(test1, "../Data/20200527_ScaleFree_1000_1-15.rds")
readr::write_rds(test0, "../Data/20200527_Random_1000_1-15.rds")
readr::write_rds(test0, "../Data/20200527_SmallWorld_1000_1-15.rds")
